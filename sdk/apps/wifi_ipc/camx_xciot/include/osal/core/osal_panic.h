/*****************************************************************************
 * osal_panic.h
 *
 *
 *
 ****************************************************************************/
/*
 * wiki
 * ====
 */
#ifndef OSAL_PANIC_H_INCLUDE
#define OSAL_PANIC_H_INCLUDE
/*****************************************************************************
 * @addtogroup osal_panic
 * @{
 */
/*****************************************************************************
 * Included Files
 ****************************************************************************/

#if !defined(OSAL_API_H_INCLUDE)
#error "Only 'osal/osal_api.h' can be included directly."
#endif

/*****************************************************************************
 * Pre-processor Definitions
 ****************************************************************************/

/*****************************************************************************
 * Public Types
 ****************************************************************************/

/*****************************************************************************
 * Public Data
 ****************************************************************************/

/*****************************************************************************
 * Inline Functions
 ****************************************************************************/

/****************************************************************************/
#ifdef __cplusplus
extern "C" {
#endif
/*****************************************************************************
 * Public Function Prototypes
 ****************************************************************************/

/**
 * @brief osal_panic is used to terminate the process with prejudice, and.
 * should only be called in the face of a critical programming error,
 * or other situation where it would be unsafe to attempt to continue.
 * As this crashes the program, it should never be used when factors outside
 * the program can cause it, such as receiving protocol errors, or running
 * out of memory.  Its better in those cases to return an error to the
 * program and let the caller handle the error situation.
 */
void osal_fault(const char *fmt, ...);

/****************************************************************************/
#ifdef __cplusplus
}
#endif
/*****************************************************************************
 * @} (end addtogroup osal_panic)
 */
/****************************************************************************/
#endif /* OSAL_PANIC_H_INCLUDE */
/****************************************************************************/
/*                                                                          */
/*  End of file.                                                            */
/*                                                                          */
/****************************************************************************/
